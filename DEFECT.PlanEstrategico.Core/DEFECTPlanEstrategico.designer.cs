#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DEFECT.PlanEstrategico.Core
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DEFECT_PlanEstrategico")]
	public partial class DEFECTPlanEstrategicoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAtributo(Atributo instance);
    partial void UpdateAtributo(Atributo instance);
    partial void DeleteAtributo(Atributo instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertCalendario(Calendario instance);
    partial void UpdateCalendario(Calendario instance);
    partial void DeleteCalendario(Calendario instance);
    partial void InsertCampana(Campana instance);
    partial void UpdateCampana(Campana instance);
    partial void DeleteCampana(Campana instance);
    partial void InsertCampanaCanal(CampanaCanal instance);
    partial void UpdateCampanaCanal(CampanaCanal instance);
    partial void DeleteCampanaCanal(CampanaCanal instance);
    partial void InsertCanal(Canal instance);
    partial void UpdateCanal(Canal instance);
    partial void DeleteCanal(Canal instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertClienteServicio(ClienteServicio instance);
    partial void UpdateClienteServicio(ClienteServicio instance);
    partial void DeleteClienteServicio(ClienteServicio instance);
    partial void InsertContacto(Contacto instance);
    partial void UpdateContacto(Contacto instance);
    partial void DeleteContacto(Contacto instance);
    partial void InsertDiaEspecial(DiaEspecial instance);
    partial void UpdateDiaEspecial(DiaEspecial instance);
    partial void DeleteDiaEspecial(DiaEspecial instance);
    partial void InsertEstadoProducto(EstadoProducto instance);
    partial void UpdateEstadoProducto(EstadoProducto instance);
    partial void DeleteEstadoProducto(EstadoProducto instance);
    partial void InsertNotificacion(Notificacion instance);
    partial void UpdateNotificacion(Notificacion instance);
    partial void DeleteNotificacion(Notificacion instance);
    partial void InsertPermiso(Permiso instance);
    partial void UpdatePermiso(Permiso instance);
    partial void DeletePermiso(Permiso instance);
    partial void InsertPieza(Pieza instance);
    partial void UpdatePieza(Pieza instance);
    partial void DeletePieza(Pieza instance);
    partial void InsertPilarEstrategico(PilarEstrategico instance);
    partial void UpdatePilarEstrategico(PilarEstrategico instance);
    partial void DeletePilarEstrategico(PilarEstrategico instance);
    partial void InsertPilarEstrategicoCampana(PilarEstrategicoCampana instance);
    partial void UpdatePilarEstrategicoCampana(PilarEstrategicoCampana instance);
    partial void DeletePilarEstrategicoCampana(PilarEstrategicoCampana instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertProductoEstadoHistorico(ProductoEstadoHistorico instance);
    partial void UpdateProductoEstadoHistorico(ProductoEstadoHistorico instance);
    partial void DeleteProductoEstadoHistorico(ProductoEstadoHistorico instance);
    partial void InsertServicio(Servicio instance);
    partial void UpdateServicio(Servicio instance);
    partial void DeleteServicio(Servicio instance);
    partial void InsertTipoAtributo(TipoAtributo instance);
    partial void UpdateTipoAtributo(TipoAtributo instance);
    partial void DeleteTipoAtributo(TipoAtributo instance);
    partial void InsertTipoCanal(TipoCanal instance);
    partial void UpdateTipoCanal(TipoCanal instance);
    partial void DeleteTipoCanal(TipoCanal instance);
    partial void InsertTipoDiaEspecial(TipoDiaEspecial instance);
    partial void UpdateTipoDiaEspecial(TipoDiaEspecial instance);
    partial void DeleteTipoDiaEspecial(TipoDiaEspecial instance);
    partial void InsertTipoEstadoNotificacion(TipoEstadoNotificacion instance);
    partial void UpdateTipoEstadoNotificacion(TipoEstadoNotificacion instance);
    partial void DeleteTipoEstadoNotificacion(TipoEstadoNotificacion instance);
    partial void InsertTipoEstadoProducto(TipoEstadoProducto instance);
    partial void UpdateTipoEstadoProducto(TipoEstadoProducto instance);
    partial void DeleteTipoEstadoProducto(TipoEstadoProducto instance);
    partial void InsertTipoNotificacion(TipoNotificacion instance);
    partial void UpdateTipoNotificacion(TipoNotificacion instance);
    partial void DeleteTipoNotificacion(TipoNotificacion instance);
    partial void InsertTipoProducto(TipoProducto instance);
    partial void UpdateTipoProducto(TipoProducto instance);
    partial void DeleteTipoProducto(TipoProducto instance);
    partial void InsertTipoServicio(TipoServicio instance);
    partial void UpdateTipoServicio(TipoServicio instance);
    partial void DeleteTipoServicio(TipoServicio instance);
    partial void InsertTipoUsuario(TipoUsuario instance);
    partial void UpdateTipoUsuario(TipoUsuario instance);
    partial void DeleteTipoUsuario(TipoUsuario instance);
    partial void InsertTipoUsuarioPermiso(TipoUsuarioPermiso instance);
    partial void UpdateTipoUsuarioPermiso(TipoUsuarioPermiso instance);
    partial void DeleteTipoUsuarioPermiso(TipoUsuarioPermiso instance);
    #endregion
		
		public DEFECTPlanEstrategicoDataContext() : 
				base(global::DEFECT.PlanEstrategico.Core.Properties.Settings.Default.DEFECT_PlanEstrategicoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DEFECTPlanEstrategicoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DEFECTPlanEstrategicoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DEFECTPlanEstrategicoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DEFECTPlanEstrategicoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Atributo> Atributos
		{
			get
			{
				return this.GetTable<Atributo>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Calendario> Calendarios
		{
			get
			{
				return this.GetTable<Calendario>();
			}
		}
		
		public System.Data.Linq.Table<Campana> Campanas
		{
			get
			{
				return this.GetTable<Campana>();
			}
		}
		
		public System.Data.Linq.Table<CampanaCanal> CampanaCanals
		{
			get
			{
				return this.GetTable<CampanaCanal>();
			}
		}
		
		public System.Data.Linq.Table<Canal> Canals
		{
			get
			{
				return this.GetTable<Canal>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<ClienteServicio> ClienteServicios
		{
			get
			{
				return this.GetTable<ClienteServicio>();
			}
		}
		
		public System.Data.Linq.Table<Contacto> Contactos
		{
			get
			{
				return this.GetTable<Contacto>();
			}
		}
		
		public System.Data.Linq.Table<DiaEspecial> DiaEspecials
		{
			get
			{
				return this.GetTable<DiaEspecial>();
			}
		}
		
		public System.Data.Linq.Table<EstadoProducto> EstadoProductos
		{
			get
			{
				return this.GetTable<EstadoProducto>();
			}
		}
		
		public System.Data.Linq.Table<Notificacion> Notificacions
		{
			get
			{
				return this.GetTable<Notificacion>();
			}
		}
		
		public System.Data.Linq.Table<Permiso> Permisos
		{
			get
			{
				return this.GetTable<Permiso>();
			}
		}
		
		public System.Data.Linq.Table<Pieza> Piezas
		{
			get
			{
				return this.GetTable<Pieza>();
			}
		}
		
		public System.Data.Linq.Table<PilarEstrategico> PilarEstrategicos
		{
			get
			{
				return this.GetTable<PilarEstrategico>();
			}
		}
		
		public System.Data.Linq.Table<PilarEstrategicoCampana> PilarEstrategicoCampanas
		{
			get
			{
				return this.GetTable<PilarEstrategicoCampana>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Productos
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<ProductoEstadoHistorico> ProductoEstadoHistoricos
		{
			get
			{
				return this.GetTable<ProductoEstadoHistorico>();
			}
		}
		
		public System.Data.Linq.Table<Servicio> Servicios
		{
			get
			{
				return this.GetTable<Servicio>();
			}
		}
		
		public System.Data.Linq.Table<TipoAtributo> TipoAtributos
		{
			get
			{
				return this.GetTable<TipoAtributo>();
			}
		}
		
		public System.Data.Linq.Table<TipoCanal> TipoCanals
		{
			get
			{
				return this.GetTable<TipoCanal>();
			}
		}
		
		public System.Data.Linq.Table<TipoDiaEspecial> TipoDiaEspecials
		{
			get
			{
				return this.GetTable<TipoDiaEspecial>();
			}
		}
		
		public System.Data.Linq.Table<TipoEstadoNotificacion> TipoEstadoNotificacions
		{
			get
			{
				return this.GetTable<TipoEstadoNotificacion>();
			}
		}
		
		public System.Data.Linq.Table<TipoEstadoProducto> TipoEstadoProductos
		{
			get
			{
				return this.GetTable<TipoEstadoProducto>();
			}
		}
		
		public System.Data.Linq.Table<TipoNotificacion> TipoNotificacions
		{
			get
			{
				return this.GetTable<TipoNotificacion>();
			}
		}
		
		public System.Data.Linq.Table<TipoProducto> TipoProductos
		{
			get
			{
				return this.GetTable<TipoProducto>();
			}
		}
		
		public System.Data.Linq.Table<TipoServicio> TipoServicios
		{
			get
			{
				return this.GetTable<TipoServicio>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsuario> TipoUsuarios
		{
			get
			{
				return this.GetTable<TipoUsuario>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsuarioPermiso> TipoUsuarioPermisos
		{
			get
			{
				return this.GetTable<TipoUsuarioPermiso>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Atributo")]
	public partial class Atributo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAtributo;
		
		private int _IdTipoAtributo;
		
		private int _IdCliente;
		
		private string _Nombre;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<TipoAtributo> _TipoAtributo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAtributoChanging(int value);
    partial void OnIdAtributoChanged();
    partial void OnIdTipoAtributoChanging(int value);
    partial void OnIdTipoAtributoChanged();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Atributo()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._TipoAtributo = default(EntityRef<TipoAtributo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAtributo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAtributo
		{
			get
			{
				return this._IdAtributo;
			}
			set
			{
				if ((this._IdAtributo != value))
				{
					this.OnIdAtributoChanging(value);
					this.SendPropertyChanging();
					this._IdAtributo = value;
					this.SendPropertyChanged("IdAtributo");
					this.OnIdAtributoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoAtributo", DbType="Int NOT NULL")]
		public int IdTipoAtributo
		{
			get
			{
				return this._IdTipoAtributo;
			}
			set
			{
				if ((this._IdTipoAtributo != value))
				{
					if (this._TipoAtributo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoAtributoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoAtributo = value;
					this.SendPropertyChanged("IdTipoAtributo");
					this.OnIdTipoAtributoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int NOT NULL")]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Atributo", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Atributos.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Atributos.Add(this);
						this._IdCliente = value.IdCliente;
					}
					else
					{
						this._IdCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAtributo_Atributo", Storage="_TipoAtributo", ThisKey="IdTipoAtributo", OtherKey="IdTipoAtributo", IsForeignKey=true)]
		public TipoAtributo TipoAtributo
		{
			get
			{
				return this._TipoAtributo.Entity;
			}
			set
			{
				TipoAtributo previousValue = this._TipoAtributo.Entity;
				if (((previousValue != value) 
							|| (this._TipoAtributo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAtributo.Entity = null;
						previousValue.Atributos.Remove(this);
					}
					this._TipoAtributo.Entity = value;
					if ((value != null))
					{
						value.Atributos.Add(this);
						this._IdTipoAtributo = value.IdTipoAtributo;
					}
					else
					{
						this._IdTipoAtributo = default(int);
					}
					this.SendPropertyChanged("TipoAtributo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private int _IdTipoUsuario;
		
		private int _IdCliente;
		
		private string _Nombre;
		
		private string _ApellidoPaterno;
		
		private string _Correo;
		
		private EntitySet<Notificacion> _Notificacions;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<TipoUsuario> _TipoUsuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdTipoUsuarioChanging(int value);
    partial void OnIdTipoUsuarioChanged();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoPaternoChanging(string value);
    partial void OnApellidoPaternoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    #endregion
		
		public Usuario()
		{
			this._Notificacions = new EntitySet<Notificacion>(new Action<Notificacion>(this.attach_Notificacions), new Action<Notificacion>(this.detach_Notificacions));
			this._Cliente = default(EntityRef<Cliente>);
			this._TipoUsuario = default(EntityRef<TipoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", DbType="Int NOT NULL")]
		public int IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					if (this._TipoUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int NOT NULL")]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoPaterno", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ApellidoPaterno
		{
			get
			{
				return this._ApellidoPaterno;
			}
			set
			{
				if ((this._ApellidoPaterno != value))
				{
					this.OnApellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoPaterno = value;
					this.SendPropertyChanged("ApellidoPaterno");
					this.OnApellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(225) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Notificacion", Storage="_Notificacions", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Notificacion> Notificacions
		{
			get
			{
				return this._Notificacions;
			}
			set
			{
				this._Notificacions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Usuario", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._IdCliente = value.IdCliente;
					}
					else
					{
						this._IdCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Usuario", Storage="_TipoUsuario", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario", IsForeignKey=true)]
		public TipoUsuario TipoUsuario
		{
			get
			{
				return this._TipoUsuario.Entity;
			}
			set
			{
				TipoUsuario previousValue = this._TipoUsuario.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuario.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._TipoUsuario.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._IdTipoUsuario = value.IdTipoUsuario;
					}
					else
					{
						this._IdTipoUsuario = default(int);
					}
					this.SendPropertyChanged("TipoUsuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notificacions(Notificacion entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Notificacions(Notificacion entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calendario")]
	public partial class Calendario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCalendario;
		
		private int _IdProducto;
		
		private System.DateTime _Fecha;
		
		private EntityRef<Producto> _Producto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCalendarioChanging(int value);
    partial void OnIdCalendarioChanged();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    #endregion
		
		public Calendario()
		{
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCalendario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCalendario
		{
			get
			{
				return this._IdCalendario;
			}
			set
			{
				if ((this._IdCalendario != value))
				{
					this.OnIdCalendarioChanging(value);
					this.SendPropertyChanging();
					this._IdCalendario = value;
					this.SendPropertyChanged("IdCalendario");
					this.OnIdCalendarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", DbType="Int NOT NULL")]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Calendario", Storage="_Producto", ThisKey="IdProducto", OtherKey="IdProducto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Calendarios.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Calendarios.Add(this);
						this._IdProducto = value.IdProducto;
					}
					else
					{
						this._IdProducto = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Campana")]
	public partial class Campana : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCampana;
		
		private string _Nombre;
		
		private System.DateTime _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaFin;
		
		private string _Tema;
		
		private string _ObjetivoComercial;
		
		private string _Responsable;
		
		private string _Contralor;
		
		private System.Nullable<decimal> _Presupuesto;
		
		private System.Nullable<decimal> _Inversion;
		
		private System.DateTime _FechaCreacion;
		
		private string _CreadoPor;
		
		private EntitySet<CampanaCanal> _CampanaCanals;
		
		private EntitySet<PilarEstrategicoCampana> _PilarEstrategicoCampanas;
		
		private EntitySet<Producto> _Productos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCampanaChanging(int value);
    partial void OnIdCampanaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechaInicioChanging(System.DateTime value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinChanged();
    partial void OnTemaChanging(string value);
    partial void OnTemaChanged();
    partial void OnObjetivoComercialChanging(string value);
    partial void OnObjetivoComercialChanged();
    partial void OnResponsableChanging(string value);
    partial void OnResponsableChanged();
    partial void OnContralorChanging(string value);
    partial void OnContralorChanged();
    partial void OnPresupuestoChanging(System.Nullable<decimal> value);
    partial void OnPresupuestoChanged();
    partial void OnInversionChanging(System.Nullable<decimal> value);
    partial void OnInversionChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    partial void OnCreadoPorChanging(string value);
    partial void OnCreadoPorChanged();
    #endregion
		
		public Campana()
		{
			this._CampanaCanals = new EntitySet<CampanaCanal>(new Action<CampanaCanal>(this.attach_CampanaCanals), new Action<CampanaCanal>(this.detach_CampanaCanals));
			this._PilarEstrategicoCampanas = new EntitySet<PilarEstrategicoCampana>(new Action<PilarEstrategicoCampana>(this.attach_PilarEstrategicoCampanas), new Action<PilarEstrategicoCampana>(this.detach_PilarEstrategicoCampanas));
			this._Productos = new EntitySet<Producto>(new Action<Producto>(this.attach_Productos), new Action<Producto>(this.detach_Productos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCampana", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCampana
		{
			get
			{
				return this._IdCampana;
			}
			set
			{
				if ((this._IdCampana != value))
				{
					this.OnIdCampanaChanging(value);
					this.SendPropertyChanging();
					this._IdCampana = value;
					this.SendPropertyChanged("IdCampana");
					this.OnIdCampanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="Date NOT NULL")]
		public System.DateTime FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFin", DbType="Date")]
		public System.Nullable<System.DateTime> FechaFin
		{
			get
			{
				return this._FechaFin;
			}
			set
			{
				if ((this._FechaFin != value))
				{
					this.OnFechaFinChanging(value);
					this.SendPropertyChanging();
					this._FechaFin = value;
					this.SendPropertyChanged("FechaFin");
					this.OnFechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tema", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Tema
		{
			get
			{
				return this._Tema;
			}
			set
			{
				if ((this._Tema != value))
				{
					this.OnTemaChanging(value);
					this.SendPropertyChanging();
					this._Tema = value;
					this.SendPropertyChanged("Tema");
					this.OnTemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjetivoComercial", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ObjetivoComercial
		{
			get
			{
				return this._ObjetivoComercial;
			}
			set
			{
				if ((this._ObjetivoComercial != value))
				{
					this.OnObjetivoComercialChanging(value);
					this.SendPropertyChanging();
					this._ObjetivoComercial = value;
					this.SendPropertyChanged("ObjetivoComercial");
					this.OnObjetivoComercialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsable", DbType="NVarChar(255)")]
		public string Responsable
		{
			get
			{
				return this._Responsable;
			}
			set
			{
				if ((this._Responsable != value))
				{
					this.OnResponsableChanging(value);
					this.SendPropertyChanging();
					this._Responsable = value;
					this.SendPropertyChanged("Responsable");
					this.OnResponsableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contralor", DbType="NVarChar(255)")]
		public string Contralor
		{
			get
			{
				return this._Contralor;
			}
			set
			{
				if ((this._Contralor != value))
				{
					this.OnContralorChanging(value);
					this.SendPropertyChanging();
					this._Contralor = value;
					this.SendPropertyChanged("Contralor");
					this.OnContralorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Presupuesto", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Presupuesto
		{
			get
			{
				return this._Presupuesto;
			}
			set
			{
				if ((this._Presupuesto != value))
				{
					this.OnPresupuestoChanging(value);
					this.SendPropertyChanging();
					this._Presupuesto = value;
					this.SendPropertyChanged("Presupuesto");
					this.OnPresupuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inversion", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Inversion
		{
			get
			{
				return this._Inversion;
			}
			set
			{
				if ((this._Inversion != value))
				{
					this.OnInversionChanging(value);
					this.SendPropertyChanging();
					this._Inversion = value;
					this.SendPropertyChanged("Inversion");
					this.OnInversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="Date NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreadoPor", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CreadoPor
		{
			get
			{
				return this._CreadoPor;
			}
			set
			{
				if ((this._CreadoPor != value))
				{
					this.OnCreadoPorChanging(value);
					this.SendPropertyChanging();
					this._CreadoPor = value;
					this.SendPropertyChanged("CreadoPor");
					this.OnCreadoPorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campana_CampanaCanal", Storage="_CampanaCanals", ThisKey="IdCampana", OtherKey="IdCampana")]
		public EntitySet<CampanaCanal> CampanaCanals
		{
			get
			{
				return this._CampanaCanals;
			}
			set
			{
				this._CampanaCanals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campana_PilarEstrategicoCampana", Storage="_PilarEstrategicoCampanas", ThisKey="IdCampana", OtherKey="IdCampana")]
		public EntitySet<PilarEstrategicoCampana> PilarEstrategicoCampanas
		{
			get
			{
				return this._PilarEstrategicoCampanas;
			}
			set
			{
				this._PilarEstrategicoCampanas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campana_Producto", Storage="_Productos", ThisKey="IdCampana", OtherKey="IdCampana")]
		public EntitySet<Producto> Productos
		{
			get
			{
				return this._Productos;
			}
			set
			{
				this._Productos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CampanaCanals(CampanaCanal entity)
		{
			this.SendPropertyChanging();
			entity.Campana = this;
		}
		
		private void detach_CampanaCanals(CampanaCanal entity)
		{
			this.SendPropertyChanging();
			entity.Campana = null;
		}
		
		private void attach_PilarEstrategicoCampanas(PilarEstrategicoCampana entity)
		{
			this.SendPropertyChanging();
			entity.Campana = this;
		}
		
		private void detach_PilarEstrategicoCampanas(PilarEstrategicoCampana entity)
		{
			this.SendPropertyChanging();
			entity.Campana = null;
		}
		
		private void attach_Productos(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Campana = this;
		}
		
		private void detach_Productos(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Campana = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampanaCanal")]
	public partial class CampanaCanal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCampanaCanal;
		
		private int _IdCampana;
		
		private int _IdCanal;
		
		private EntityRef<Campana> _Campana;
		
		private EntityRef<Canal> _Canal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCampanaCanalChanging(int value);
    partial void OnIdCampanaCanalChanged();
    partial void OnIdCampanaChanging(int value);
    partial void OnIdCampanaChanged();
    partial void OnIdCanalChanging(int value);
    partial void OnIdCanalChanged();
    #endregion
		
		public CampanaCanal()
		{
			this._Campana = default(EntityRef<Campana>);
			this._Canal = default(EntityRef<Canal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCampanaCanal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCampanaCanal
		{
			get
			{
				return this._IdCampanaCanal;
			}
			set
			{
				if ((this._IdCampanaCanal != value))
				{
					this.OnIdCampanaCanalChanging(value);
					this.SendPropertyChanging();
					this._IdCampanaCanal = value;
					this.SendPropertyChanged("IdCampanaCanal");
					this.OnIdCampanaCanalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCampana", DbType="Int NOT NULL")]
		public int IdCampana
		{
			get
			{
				return this._IdCampana;
			}
			set
			{
				if ((this._IdCampana != value))
				{
					if (this._Campana.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCampanaChanging(value);
					this.SendPropertyChanging();
					this._IdCampana = value;
					this.SendPropertyChanged("IdCampana");
					this.OnIdCampanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCanal", DbType="Int NOT NULL")]
		public int IdCanal
		{
			get
			{
				return this._IdCanal;
			}
			set
			{
				if ((this._IdCanal != value))
				{
					if (this._Canal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCanalChanging(value);
					this.SendPropertyChanging();
					this._IdCanal = value;
					this.SendPropertyChanged("IdCanal");
					this.OnIdCanalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campana_CampanaCanal", Storage="_Campana", ThisKey="IdCampana", OtherKey="IdCampana", IsForeignKey=true)]
		public Campana Campana
		{
			get
			{
				return this._Campana.Entity;
			}
			set
			{
				Campana previousValue = this._Campana.Entity;
				if (((previousValue != value) 
							|| (this._Campana.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campana.Entity = null;
						previousValue.CampanaCanals.Remove(this);
					}
					this._Campana.Entity = value;
					if ((value != null))
					{
						value.CampanaCanals.Add(this);
						this._IdCampana = value.IdCampana;
					}
					else
					{
						this._IdCampana = default(int);
					}
					this.SendPropertyChanged("Campana");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Canal_CampanaCanal", Storage="_Canal", ThisKey="IdCanal", OtherKey="IdCanal", IsForeignKey=true)]
		public Canal Canal
		{
			get
			{
				return this._Canal.Entity;
			}
			set
			{
				Canal previousValue = this._Canal.Entity;
				if (((previousValue != value) 
							|| (this._Canal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Canal.Entity = null;
						previousValue.CampanaCanals.Remove(this);
					}
					this._Canal.Entity = value;
					if ((value != null))
					{
						value.CampanaCanals.Add(this);
						this._IdCanal = value.IdCanal;
					}
					else
					{
						this._IdCanal = default(int);
					}
					this.SendPropertyChanged("Canal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Canal")]
	public partial class Canal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCanal;
		
		private int _IdTipoCanal;
		
		private string _Nombre;
		
		private EntitySet<CampanaCanal> _CampanaCanals;
		
		private EntityRef<TipoCanal> _TipoCanal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCanalChanging(int value);
    partial void OnIdCanalChanged();
    partial void OnIdTipoCanalChanging(int value);
    partial void OnIdTipoCanalChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Canal()
		{
			this._CampanaCanals = new EntitySet<CampanaCanal>(new Action<CampanaCanal>(this.attach_CampanaCanals), new Action<CampanaCanal>(this.detach_CampanaCanals));
			this._TipoCanal = default(EntityRef<TipoCanal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCanal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCanal
		{
			get
			{
				return this._IdCanal;
			}
			set
			{
				if ((this._IdCanal != value))
				{
					this.OnIdCanalChanging(value);
					this.SendPropertyChanging();
					this._IdCanal = value;
					this.SendPropertyChanged("IdCanal");
					this.OnIdCanalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoCanal", DbType="Int NOT NULL")]
		public int IdTipoCanal
		{
			get
			{
				return this._IdTipoCanal;
			}
			set
			{
				if ((this._IdTipoCanal != value))
				{
					if (this._TipoCanal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoCanalChanging(value);
					this.SendPropertyChanging();
					this._IdTipoCanal = value;
					this.SendPropertyChanged("IdTipoCanal");
					this.OnIdTipoCanalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Canal_CampanaCanal", Storage="_CampanaCanals", ThisKey="IdCanal", OtherKey="IdCanal")]
		public EntitySet<CampanaCanal> CampanaCanals
		{
			get
			{
				return this._CampanaCanals;
			}
			set
			{
				this._CampanaCanals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoCanal_Canal", Storage="_TipoCanal", ThisKey="IdTipoCanal", OtherKey="IdTipoCanal", IsForeignKey=true)]
		public TipoCanal TipoCanal
		{
			get
			{
				return this._TipoCanal.Entity;
			}
			set
			{
				TipoCanal previousValue = this._TipoCanal.Entity;
				if (((previousValue != value) 
							|| (this._TipoCanal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoCanal.Entity = null;
						previousValue.Canals.Remove(this);
					}
					this._TipoCanal.Entity = value;
					if ((value != null))
					{
						value.Canals.Add(this);
						this._IdTipoCanal = value.IdTipoCanal;
					}
					else
					{
						this._IdTipoCanal = default(int);
					}
					this.SendPropertyChanged("TipoCanal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CampanaCanals(CampanaCanal entity)
		{
			this.SendPropertyChanging();
			entity.Canal = this;
		}
		
		private void detach_CampanaCanals(CampanaCanal entity)
		{
			this.SendPropertyChanging();
			entity.Canal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCliente;
		
		private string _Nombre;
		
		private string _RazonSocial;
		
		private int _Rut;
		
		private EntitySet<Atributo> _Atributos;
		
		private EntitySet<Usuario> _Usuarios;
		
		private EntitySet<ClienteServicio> _ClienteServicios;
		
		private EntitySet<Contacto> _Contactos;
		
		private EntitySet<PilarEstrategico> _PilarEstrategicos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnRazonSocialChanging(string value);
    partial void OnRazonSocialChanged();
    partial void OnRutChanging(int value);
    partial void OnRutChanged();
    #endregion
		
		public Cliente()
		{
			this._Atributos = new EntitySet<Atributo>(new Action<Atributo>(this.attach_Atributos), new Action<Atributo>(this.detach_Atributos));
			this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
			this._ClienteServicios = new EntitySet<ClienteServicio>(new Action<ClienteServicio>(this.attach_ClienteServicios), new Action<ClienteServicio>(this.detach_ClienteServicios));
			this._Contactos = new EntitySet<Contacto>(new Action<Contacto>(this.attach_Contactos), new Action<Contacto>(this.detach_Contactos));
			this._PilarEstrategicos = new EntitySet<PilarEstrategico>(new Action<PilarEstrategico>(this.attach_PilarEstrategicos), new Action<PilarEstrategico>(this.detach_PilarEstrategicos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RazonSocial", DbType="NVarChar(2047)")]
		public string RazonSocial
		{
			get
			{
				return this._RazonSocial;
			}
			set
			{
				if ((this._RazonSocial != value))
				{
					this.OnRazonSocialChanging(value);
					this.SendPropertyChanging();
					this._RazonSocial = value;
					this.SendPropertyChanged("RazonSocial");
					this.OnRazonSocialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rut", DbType="Int NOT NULL")]
		public int Rut
		{
			get
			{
				return this._Rut;
			}
			set
			{
				if ((this._Rut != value))
				{
					this.OnRutChanging(value);
					this.SendPropertyChanging();
					this._Rut = value;
					this.SendPropertyChanged("Rut");
					this.OnRutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Atributo", Storage="_Atributos", ThisKey="IdCliente", OtherKey="IdCliente")]
		public EntitySet<Atributo> Atributos
		{
			get
			{
				return this._Atributos;
			}
			set
			{
				this._Atributos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Usuario", Storage="_Usuarios", ThisKey="IdCliente", OtherKey="IdCliente")]
		public EntitySet<Usuario> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_ClienteServicio", Storage="_ClienteServicios", ThisKey="IdCliente", OtherKey="IdCliente")]
		public EntitySet<ClienteServicio> ClienteServicios
		{
			get
			{
				return this._ClienteServicios;
			}
			set
			{
				this._ClienteServicios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Contacto", Storage="_Contactos", ThisKey="IdCliente", OtherKey="IdCliente")]
		public EntitySet<Contacto> Contactos
		{
			get
			{
				return this._Contactos;
			}
			set
			{
				this._Contactos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_PilarEstrategico", Storage="_PilarEstrategicos", ThisKey="IdCliente", OtherKey="IdCliente")]
		public EntitySet<PilarEstrategico> PilarEstrategicos
		{
			get
			{
				return this._PilarEstrategicos;
			}
			set
			{
				this._PilarEstrategicos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Atributos(Atributo entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Atributos(Atributo entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_ClienteServicios(ClienteServicio entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_ClienteServicios(ClienteServicio entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_PilarEstrategicos(PilarEstrategico entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_PilarEstrategicos(PilarEstrategico entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClienteServicio")]
	public partial class ClienteServicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdClienteServicio;
		
		private int _IdCliente;
		
		private int _IdServicio;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Servicio> _Servicio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClienteServicioChanging(int value);
    partial void OnIdClienteServicioChanged();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnIdServicioChanging(int value);
    partial void OnIdServicioChanged();
    #endregion
		
		public ClienteServicio()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Servicio = default(EntityRef<Servicio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClienteServicio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdClienteServicio
		{
			get
			{
				return this._IdClienteServicio;
			}
			set
			{
				if ((this._IdClienteServicio != value))
				{
					this.OnIdClienteServicioChanging(value);
					this.SendPropertyChanging();
					this._IdClienteServicio = value;
					this.SendPropertyChanged("IdClienteServicio");
					this.OnIdClienteServicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int NOT NULL")]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdServicio", DbType="Int NOT NULL")]
		public int IdServicio
		{
			get
			{
				return this._IdServicio;
			}
			set
			{
				if ((this._IdServicio != value))
				{
					if (this._Servicio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdServicioChanging(value);
					this.SendPropertyChanging();
					this._IdServicio = value;
					this.SendPropertyChanged("IdServicio");
					this.OnIdServicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_ClienteServicio", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.ClienteServicios.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.ClienteServicios.Add(this);
						this._IdCliente = value.IdCliente;
					}
					else
					{
						this._IdCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicio_ClienteServicio", Storage="_Servicio", ThisKey="IdServicio", OtherKey="IdServicio", IsForeignKey=true)]
		public Servicio Servicio
		{
			get
			{
				return this._Servicio.Entity;
			}
			set
			{
				Servicio previousValue = this._Servicio.Entity;
				if (((previousValue != value) 
							|| (this._Servicio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Servicio.Entity = null;
						previousValue.ClienteServicios.Remove(this);
					}
					this._Servicio.Entity = value;
					if ((value != null))
					{
						value.ClienteServicios.Add(this);
						this._IdServicio = value.IdServicio;
					}
					else
					{
						this._IdServicio = default(int);
					}
					this.SendPropertyChanged("Servicio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacto")]
	public partial class Contacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdContacto;
		
		private int _IdCliente;
		
		private string _Nombre;
		
		private string _ApellidoPaterno;
		
		private System.Nullable<int> _Telefono;
		
		private string _Correo;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdContactoChanging(int value);
    partial void OnIdContactoChanged();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoPaternoChanging(string value);
    partial void OnApellidoPaternoChanged();
    partial void OnTelefonoChanging(System.Nullable<int> value);
    partial void OnTelefonoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    #endregion
		
		public Contacto()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContacto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdContacto
		{
			get
			{
				return this._IdContacto;
			}
			set
			{
				if ((this._IdContacto != value))
				{
					this.OnIdContactoChanging(value);
					this.SendPropertyChanging();
					this._IdContacto = value;
					this.SendPropertyChanged("IdContacto");
					this.OnIdContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int NOT NULL")]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoPaterno", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ApellidoPaterno
		{
			get
			{
				return this._ApellidoPaterno;
			}
			set
			{
				if ((this._ApellidoPaterno != value))
				{
					this.OnApellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoPaterno = value;
					this.SendPropertyChanged("ApellidoPaterno");
					this.OnApellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int")]
		public System.Nullable<int> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(255)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Contacto", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Contactos.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Contactos.Add(this);
						this._IdCliente = value.IdCliente;
					}
					else
					{
						this._IdCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiaEspecial")]
	public partial class DiaEspecial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDiaEspecial;
		
		private int _IdTipoDiaEspecial;
		
		private string _Nombre;
		
		private EntityRef<TipoDiaEspecial> _TipoDiaEspecial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDiaEspecialChanging(int value);
    partial void OnIdDiaEspecialChanged();
    partial void OnIdTipoDiaEspecialChanging(int value);
    partial void OnIdTipoDiaEspecialChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public DiaEspecial()
		{
			this._TipoDiaEspecial = default(EntityRef<TipoDiaEspecial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDiaEspecial", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDiaEspecial
		{
			get
			{
				return this._IdDiaEspecial;
			}
			set
			{
				if ((this._IdDiaEspecial != value))
				{
					this.OnIdDiaEspecialChanging(value);
					this.SendPropertyChanging();
					this._IdDiaEspecial = value;
					this.SendPropertyChanged("IdDiaEspecial");
					this.OnIdDiaEspecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoDiaEspecial", DbType="Int NOT NULL")]
		public int IdTipoDiaEspecial
		{
			get
			{
				return this._IdTipoDiaEspecial;
			}
			set
			{
				if ((this._IdTipoDiaEspecial != value))
				{
					if (this._TipoDiaEspecial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoDiaEspecialChanging(value);
					this.SendPropertyChanging();
					this._IdTipoDiaEspecial = value;
					this.SendPropertyChanged("IdTipoDiaEspecial");
					this.OnIdTipoDiaEspecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDiaEspecial_DiaEspecial", Storage="_TipoDiaEspecial", ThisKey="IdTipoDiaEspecial", OtherKey="IdTipoDiaEspecial", IsForeignKey=true)]
		public TipoDiaEspecial TipoDiaEspecial
		{
			get
			{
				return this._TipoDiaEspecial.Entity;
			}
			set
			{
				TipoDiaEspecial previousValue = this._TipoDiaEspecial.Entity;
				if (((previousValue != value) 
							|| (this._TipoDiaEspecial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoDiaEspecial.Entity = null;
						previousValue.DiaEspecials.Remove(this);
					}
					this._TipoDiaEspecial.Entity = value;
					if ((value != null))
					{
						value.DiaEspecials.Add(this);
						this._IdTipoDiaEspecial = value.IdTipoDiaEspecial;
					}
					else
					{
						this._IdTipoDiaEspecial = default(int);
					}
					this.SendPropertyChanged("TipoDiaEspecial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstadoProducto")]
	public partial class EstadoProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstadoProducto;
		
		private int _IdTipoEstadoProducto;
		
		private string _Nombre;
		
		private System.DateTime _FechaCreacion;
		
		private string _CreadoPor;
		
		private EntityRef<Producto> _Producto;
		
		private EntityRef<TipoEstadoProducto> _TipoEstadoProducto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstadoProductoChanging(int value);
    partial void OnIdEstadoProductoChanged();
    partial void OnIdTipoEstadoProductoChanging(int value);
    partial void OnIdTipoEstadoProductoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    partial void OnCreadoPorChanging(string value);
    partial void OnCreadoPorChanged();
    #endregion
		
		public EstadoProducto()
		{
			this._Producto = default(EntityRef<Producto>);
			this._TipoEstadoProducto = default(EntityRef<TipoEstadoProducto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstadoProducto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEstadoProducto
		{
			get
			{
				return this._IdEstadoProducto;
			}
			set
			{
				if ((this._IdEstadoProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstadoProductoChanging(value);
					this.SendPropertyChanging();
					this._IdEstadoProducto = value;
					this.SendPropertyChanged("IdEstadoProducto");
					this.OnIdEstadoProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoEstadoProducto", DbType="Int NOT NULL")]
		public int IdTipoEstadoProducto
		{
			get
			{
				return this._IdTipoEstadoProducto;
			}
			set
			{
				if ((this._IdTipoEstadoProducto != value))
				{
					if (this._TipoEstadoProducto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoEstadoProductoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoEstadoProducto = value;
					this.SendPropertyChanged("IdTipoEstadoProducto");
					this.OnIdTipoEstadoProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="Date NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreadoPor", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CreadoPor
		{
			get
			{
				return this._CreadoPor;
			}
			set
			{
				if ((this._CreadoPor != value))
				{
					this.OnCreadoPorChanging(value);
					this.SendPropertyChanging();
					this._CreadoPor = value;
					this.SendPropertyChanged("CreadoPor");
					this.OnCreadoPorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_EstadoProducto", Storage="_Producto", ThisKey="IdEstadoProducto", OtherKey="IdProducto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.EstadoProducto = null;
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.EstadoProducto = this;
						this._IdEstadoProducto = value.IdProducto;
					}
					else
					{
						this._IdEstadoProducto = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEstadoProducto_EstadoProducto", Storage="_TipoEstadoProducto", ThisKey="IdTipoEstadoProducto", OtherKey="IdTipoEstadoProdcuto", IsForeignKey=true)]
		public TipoEstadoProducto TipoEstadoProducto
		{
			get
			{
				return this._TipoEstadoProducto.Entity;
			}
			set
			{
				TipoEstadoProducto previousValue = this._TipoEstadoProducto.Entity;
				if (((previousValue != value) 
							|| (this._TipoEstadoProducto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoEstadoProducto.Entity = null;
						previousValue.EstadoProductos.Remove(this);
					}
					this._TipoEstadoProducto.Entity = value;
					if ((value != null))
					{
						value.EstadoProductos.Add(this);
						this._IdTipoEstadoProducto = value.IdTipoEstadoProdcuto;
					}
					else
					{
						this._IdTipoEstadoProducto = default(int);
					}
					this.SendPropertyChanged("TipoEstadoProducto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notificacion")]
	public partial class Notificacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNotificacion;
		
		private int _IdTipoNotificacion;
		
		private int _IdTipoEstadoNotificacion;
		
		private int _IdUsuario;
		
		private System.DateTime _FechaCreacion;
		
		private System.Nullable<System.DateTime> _FechaPostpuesto;
		
		private string _Mensaje;
		
		private string _Accion;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<TipoEstadoNotificacion> _TipoEstadoNotificacion;
		
		private EntityRef<TipoNotificacion> _TipoNotificacion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNotificacionChanging(int value);
    partial void OnIdNotificacionChanged();
    partial void OnIdTipoNotificacionChanging(int value);
    partial void OnIdTipoNotificacionChanged();
    partial void OnIdTipoEstadoNotificacionChanging(int value);
    partial void OnIdTipoEstadoNotificacionChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    partial void OnFechaPostpuestoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaPostpuestoChanged();
    partial void OnMensajeChanging(string value);
    partial void OnMensajeChanged();
    partial void OnAccionChanging(string value);
    partial void OnAccionChanged();
    #endregion
		
		public Notificacion()
		{
			this._Usuario = default(EntityRef<Usuario>);
			this._TipoEstadoNotificacion = default(EntityRef<TipoEstadoNotificacion>);
			this._TipoNotificacion = default(EntityRef<TipoNotificacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNotificacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNotificacion
		{
			get
			{
				return this._IdNotificacion;
			}
			set
			{
				if ((this._IdNotificacion != value))
				{
					this.OnIdNotificacionChanging(value);
					this.SendPropertyChanging();
					this._IdNotificacion = value;
					this.SendPropertyChanged("IdNotificacion");
					this.OnIdNotificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoNotificacion", DbType="Int NOT NULL")]
		public int IdTipoNotificacion
		{
			get
			{
				return this._IdTipoNotificacion;
			}
			set
			{
				if ((this._IdTipoNotificacion != value))
				{
					if (this._TipoNotificacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoNotificacionChanging(value);
					this.SendPropertyChanging();
					this._IdTipoNotificacion = value;
					this.SendPropertyChanged("IdTipoNotificacion");
					this.OnIdTipoNotificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoEstadoNotificacion", DbType="Int NOT NULL")]
		public int IdTipoEstadoNotificacion
		{
			get
			{
				return this._IdTipoEstadoNotificacion;
			}
			set
			{
				if ((this._IdTipoEstadoNotificacion != value))
				{
					if (this._TipoEstadoNotificacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoEstadoNotificacionChanging(value);
					this.SendPropertyChanging();
					this._IdTipoEstadoNotificacion = value;
					this.SendPropertyChanged("IdTipoEstadoNotificacion");
					this.OnIdTipoEstadoNotificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaPostpuesto", DbType="Date")]
		public System.Nullable<System.DateTime> FechaPostpuesto
		{
			get
			{
				return this._FechaPostpuesto;
			}
			set
			{
				if ((this._FechaPostpuesto != value))
				{
					this.OnFechaPostpuestoChanging(value);
					this.SendPropertyChanging();
					this._FechaPostpuesto = value;
					this.SendPropertyChanged("FechaPostpuesto");
					this.OnFechaPostpuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mensaje", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Mensaje
		{
			get
			{
				return this._Mensaje;
			}
			set
			{
				if ((this._Mensaje != value))
				{
					this.OnMensajeChanging(value);
					this.SendPropertyChanging();
					this._Mensaje = value;
					this.SendPropertyChanged("Mensaje");
					this.OnMensajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accion", DbType="NVarChar(255)")]
		public string Accion
		{
			get
			{
				return this._Accion;
			}
			set
			{
				if ((this._Accion != value))
				{
					this.OnAccionChanging(value);
					this.SendPropertyChanging();
					this._Accion = value;
					this.SendPropertyChanged("Accion");
					this.OnAccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Notificacion", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Notificacions.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Notificacions.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEstadoNotificacion_Notificacion", Storage="_TipoEstadoNotificacion", ThisKey="IdTipoEstadoNotificacion", OtherKey="IdTipoEstadoNotificacion", IsForeignKey=true)]
		public TipoEstadoNotificacion TipoEstadoNotificacion
		{
			get
			{
				return this._TipoEstadoNotificacion.Entity;
			}
			set
			{
				TipoEstadoNotificacion previousValue = this._TipoEstadoNotificacion.Entity;
				if (((previousValue != value) 
							|| (this._TipoEstadoNotificacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoEstadoNotificacion.Entity = null;
						previousValue.Notificacions.Remove(this);
					}
					this._TipoEstadoNotificacion.Entity = value;
					if ((value != null))
					{
						value.Notificacions.Add(this);
						this._IdTipoEstadoNotificacion = value.IdTipoEstadoNotificacion;
					}
					else
					{
						this._IdTipoEstadoNotificacion = default(int);
					}
					this.SendPropertyChanged("TipoEstadoNotificacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoNotificacion_Notificacion", Storage="_TipoNotificacion", ThisKey="IdTipoNotificacion", OtherKey="IdTipoNotificacion", IsForeignKey=true)]
		public TipoNotificacion TipoNotificacion
		{
			get
			{
				return this._TipoNotificacion.Entity;
			}
			set
			{
				TipoNotificacion previousValue = this._TipoNotificacion.Entity;
				if (((previousValue != value) 
							|| (this._TipoNotificacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoNotificacion.Entity = null;
						previousValue.Notificacions.Remove(this);
					}
					this._TipoNotificacion.Entity = value;
					if ((value != null))
					{
						value.Notificacions.Add(this);
						this._IdTipoNotificacion = value.IdTipoNotificacion;
					}
					else
					{
						this._IdTipoNotificacion = default(int);
					}
					this.SendPropertyChanged("TipoNotificacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permiso")]
	public partial class Permiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPermiso;
		
		private string _Nombre;
		
		private EntitySet<TipoUsuarioPermiso> _TipoUsuarioPermisos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPermisoChanging(int value);
    partial void OnIdPermisoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Permiso()
		{
			this._TipoUsuarioPermisos = new EntitySet<TipoUsuarioPermiso>(new Action<TipoUsuarioPermiso>(this.attach_TipoUsuarioPermisos), new Action<TipoUsuarioPermiso>(this.detach_TipoUsuarioPermisos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPermiso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPermiso
		{
			get
			{
				return this._IdPermiso;
			}
			set
			{
				if ((this._IdPermiso != value))
				{
					this.OnIdPermisoChanging(value);
					this.SendPropertyChanging();
					this._IdPermiso = value;
					this.SendPropertyChanged("IdPermiso");
					this.OnIdPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_TipoUsuarioPermiso", Storage="_TipoUsuarioPermisos", ThisKey="IdPermiso", OtherKey="IdPermiso")]
		public EntitySet<TipoUsuarioPermiso> TipoUsuarioPermisos
		{
			get
			{
				return this._TipoUsuarioPermisos;
			}
			set
			{
				this._TipoUsuarioPermisos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TipoUsuarioPermisos(TipoUsuarioPermiso entity)
		{
			this.SendPropertyChanging();
			entity.Permiso = this;
		}
		
		private void detach_TipoUsuarioPermisos(TipoUsuarioPermiso entity)
		{
			this.SendPropertyChanging();
			entity.Permiso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pieza")]
	public partial class Pieza : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPieza;
		
		private int _IdProducto;
		
		private System.DateTime _FechaCreacion;
		
		private string _CreadoPor;
		
		private string _Url;
		
		private EntityRef<Producto> _Producto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPiezaChanging(int value);
    partial void OnIdPiezaChanged();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    partial void OnCreadoPorChanging(string value);
    partial void OnCreadoPorChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public Pieza()
		{
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPieza", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPieza
		{
			get
			{
				return this._IdPieza;
			}
			set
			{
				if ((this._IdPieza != value))
				{
					this.OnIdPiezaChanging(value);
					this.SendPropertyChanging();
					this._IdPieza = value;
					this.SendPropertyChanged("IdPieza");
					this.OnIdPiezaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", DbType="Int NOT NULL")]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="Date NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreadoPor", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CreadoPor
		{
			get
			{
				return this._CreadoPor;
			}
			set
			{
				if ((this._CreadoPor != value))
				{
					this.OnCreadoPorChanging(value);
					this.SendPropertyChanging();
					this._CreadoPor = value;
					this.SendPropertyChanged("CreadoPor");
					this.OnCreadoPorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(2047) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Pieza", Storage="_Producto", ThisKey="IdProducto", OtherKey="IdProducto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Piezas.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Piezas.Add(this);
						this._IdProducto = value.IdProducto;
					}
					else
					{
						this._IdProducto = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PilarEstrategico")]
	public partial class PilarEstrategico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPilarEstrategico;
		
		private int _IdCliente;
		
		private string _Nombre;
		
		private EntitySet<PilarEstrategicoCampana> _PilarEstrategicoCampanas;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPilarEstrategicoChanging(int value);
    partial void OnIdPilarEstrategicoChanged();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public PilarEstrategico()
		{
			this._PilarEstrategicoCampanas = new EntitySet<PilarEstrategicoCampana>(new Action<PilarEstrategicoCampana>(this.attach_PilarEstrategicoCampanas), new Action<PilarEstrategicoCampana>(this.detach_PilarEstrategicoCampanas));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPilarEstrategico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPilarEstrategico
		{
			get
			{
				return this._IdPilarEstrategico;
			}
			set
			{
				if ((this._IdPilarEstrategico != value))
				{
					this.OnIdPilarEstrategicoChanging(value);
					this.SendPropertyChanging();
					this._IdPilarEstrategico = value;
					this.SendPropertyChanged("IdPilarEstrategico");
					this.OnIdPilarEstrategicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int NOT NULL")]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PilarEstrategico_PilarEstrategicoCampana", Storage="_PilarEstrategicoCampanas", ThisKey="IdPilarEstrategico", OtherKey="IdPilarEstrategico")]
		public EntitySet<PilarEstrategicoCampana> PilarEstrategicoCampanas
		{
			get
			{
				return this._PilarEstrategicoCampanas;
			}
			set
			{
				this._PilarEstrategicoCampanas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_PilarEstrategico", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.PilarEstrategicos.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.PilarEstrategicos.Add(this);
						this._IdCliente = value.IdCliente;
					}
					else
					{
						this._IdCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PilarEstrategicoCampanas(PilarEstrategicoCampana entity)
		{
			this.SendPropertyChanging();
			entity.PilarEstrategico = this;
		}
		
		private void detach_PilarEstrategicoCampanas(PilarEstrategicoCampana entity)
		{
			this.SendPropertyChanging();
			entity.PilarEstrategico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PilarEstrategicoCampana")]
	public partial class PilarEstrategicoCampana : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPilarEstrategicoCampana;
		
		private int _IdPilarEstrategico;
		
		private int _IdCampana;
		
		private EntityRef<Campana> _Campana;
		
		private EntityRef<PilarEstrategico> _PilarEstrategico;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPilarEstrategicoCampanaChanging(int value);
    partial void OnIdPilarEstrategicoCampanaChanged();
    partial void OnIdPilarEstrategicoChanging(int value);
    partial void OnIdPilarEstrategicoChanged();
    partial void OnIdCampanaChanging(int value);
    partial void OnIdCampanaChanged();
    #endregion
		
		public PilarEstrategicoCampana()
		{
			this._Campana = default(EntityRef<Campana>);
			this._PilarEstrategico = default(EntityRef<PilarEstrategico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPilarEstrategicoCampana", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPilarEstrategicoCampana
		{
			get
			{
				return this._IdPilarEstrategicoCampana;
			}
			set
			{
				if ((this._IdPilarEstrategicoCampana != value))
				{
					this.OnIdPilarEstrategicoCampanaChanging(value);
					this.SendPropertyChanging();
					this._IdPilarEstrategicoCampana = value;
					this.SendPropertyChanged("IdPilarEstrategicoCampana");
					this.OnIdPilarEstrategicoCampanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPilarEstrategico", DbType="Int NOT NULL")]
		public int IdPilarEstrategico
		{
			get
			{
				return this._IdPilarEstrategico;
			}
			set
			{
				if ((this._IdPilarEstrategico != value))
				{
					if (this._PilarEstrategico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPilarEstrategicoChanging(value);
					this.SendPropertyChanging();
					this._IdPilarEstrategico = value;
					this.SendPropertyChanged("IdPilarEstrategico");
					this.OnIdPilarEstrategicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCampana", DbType="Int NOT NULL")]
		public int IdCampana
		{
			get
			{
				return this._IdCampana;
			}
			set
			{
				if ((this._IdCampana != value))
				{
					if (this._Campana.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCampanaChanging(value);
					this.SendPropertyChanging();
					this._IdCampana = value;
					this.SendPropertyChanged("IdCampana");
					this.OnIdCampanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campana_PilarEstrategicoCampana", Storage="_Campana", ThisKey="IdCampana", OtherKey="IdCampana", IsForeignKey=true)]
		public Campana Campana
		{
			get
			{
				return this._Campana.Entity;
			}
			set
			{
				Campana previousValue = this._Campana.Entity;
				if (((previousValue != value) 
							|| (this._Campana.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campana.Entity = null;
						previousValue.PilarEstrategicoCampanas.Remove(this);
					}
					this._Campana.Entity = value;
					if ((value != null))
					{
						value.PilarEstrategicoCampanas.Add(this);
						this._IdCampana = value.IdCampana;
					}
					else
					{
						this._IdCampana = default(int);
					}
					this.SendPropertyChanged("Campana");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PilarEstrategico_PilarEstrategicoCampana", Storage="_PilarEstrategico", ThisKey="IdPilarEstrategico", OtherKey="IdPilarEstrategico", IsForeignKey=true)]
		public PilarEstrategico PilarEstrategico
		{
			get
			{
				return this._PilarEstrategico.Entity;
			}
			set
			{
				PilarEstrategico previousValue = this._PilarEstrategico.Entity;
				if (((previousValue != value) 
							|| (this._PilarEstrategico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PilarEstrategico.Entity = null;
						previousValue.PilarEstrategicoCampanas.Remove(this);
					}
					this._PilarEstrategico.Entity = value;
					if ((value != null))
					{
						value.PilarEstrategicoCampanas.Add(this);
						this._IdPilarEstrategico = value.IdPilarEstrategico;
					}
					else
					{
						this._IdPilarEstrategico = default(int);
					}
					this.SendPropertyChanged("PilarEstrategico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProducto;
		
		private int _IdTipoProducto;
		
		private int _IdCampana;
		
		private string _Nombre;
		
		private System.DateTime _FechaCreacion;
		
		private string _CreadoPor;
		
		private EntitySet<Calendario> _Calendarios;
		
		private EntityRef<EstadoProducto> _EstadoProducto;
		
		private EntitySet<Pieza> _Piezas;
		
		private EntitySet<ProductoEstadoHistorico> _ProductoEstadoHistoricos;
		
		private EntityRef<Campana> _Campana;
		
		private EntityRef<TipoProducto> _TipoProducto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnIdTipoProductoChanging(int value);
    partial void OnIdTipoProductoChanged();
    partial void OnIdCampanaChanging(int value);
    partial void OnIdCampanaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    partial void OnCreadoPorChanging(string value);
    partial void OnCreadoPorChanged();
    #endregion
		
		public Producto()
		{
			this._Calendarios = new EntitySet<Calendario>(new Action<Calendario>(this.attach_Calendarios), new Action<Calendario>(this.detach_Calendarios));
			this._EstadoProducto = default(EntityRef<EstadoProducto>);
			this._Piezas = new EntitySet<Pieza>(new Action<Pieza>(this.attach_Piezas), new Action<Pieza>(this.detach_Piezas));
			this._ProductoEstadoHistoricos = new EntitySet<ProductoEstadoHistorico>(new Action<ProductoEstadoHistorico>(this.attach_ProductoEstadoHistoricos), new Action<ProductoEstadoHistorico>(this.detach_ProductoEstadoHistoricos));
			this._Campana = default(EntityRef<Campana>);
			this._TipoProducto = default(EntityRef<TipoProducto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoProducto", DbType="Int NOT NULL")]
		public int IdTipoProducto
		{
			get
			{
				return this._IdTipoProducto;
			}
			set
			{
				if ((this._IdTipoProducto != value))
				{
					if (this._TipoProducto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoProductoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoProducto = value;
					this.SendPropertyChanged("IdTipoProducto");
					this.OnIdTipoProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCampana", DbType="Int NOT NULL")]
		public int IdCampana
		{
			get
			{
				return this._IdCampana;
			}
			set
			{
				if ((this._IdCampana != value))
				{
					if (this._Campana.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCampanaChanging(value);
					this.SendPropertyChanging();
					this._IdCampana = value;
					this.SendPropertyChanged("IdCampana");
					this.OnIdCampanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="Date NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreadoPor", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CreadoPor
		{
			get
			{
				return this._CreadoPor;
			}
			set
			{
				if ((this._CreadoPor != value))
				{
					this.OnCreadoPorChanging(value);
					this.SendPropertyChanging();
					this._CreadoPor = value;
					this.SendPropertyChanged("CreadoPor");
					this.OnCreadoPorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Calendario", Storage="_Calendarios", ThisKey="IdProducto", OtherKey="IdProducto")]
		public EntitySet<Calendario> Calendarios
		{
			get
			{
				return this._Calendarios;
			}
			set
			{
				this._Calendarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_EstadoProducto", Storage="_EstadoProducto", ThisKey="IdProducto", OtherKey="IdEstadoProducto", IsUnique=true, IsForeignKey=false)]
		public EstadoProducto EstadoProducto
		{
			get
			{
				return this._EstadoProducto.Entity;
			}
			set
			{
				EstadoProducto previousValue = this._EstadoProducto.Entity;
				if (((previousValue != value) 
							|| (this._EstadoProducto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadoProducto.Entity = null;
						previousValue.Producto = null;
					}
					this._EstadoProducto.Entity = value;
					if ((value != null))
					{
						value.Producto = this;
					}
					this.SendPropertyChanged("EstadoProducto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Pieza", Storage="_Piezas", ThisKey="IdProducto", OtherKey="IdProducto")]
		public EntitySet<Pieza> Piezas
		{
			get
			{
				return this._Piezas;
			}
			set
			{
				this._Piezas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_ProductoEstadoHistorico", Storage="_ProductoEstadoHistoricos", ThisKey="IdProducto", OtherKey="IdProducto")]
		public EntitySet<ProductoEstadoHistorico> ProductoEstadoHistoricos
		{
			get
			{
				return this._ProductoEstadoHistoricos;
			}
			set
			{
				this._ProductoEstadoHistoricos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campana_Producto", Storage="_Campana", ThisKey="IdCampana", OtherKey="IdCampana", IsForeignKey=true)]
		public Campana Campana
		{
			get
			{
				return this._Campana.Entity;
			}
			set
			{
				Campana previousValue = this._Campana.Entity;
				if (((previousValue != value) 
							|| (this._Campana.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campana.Entity = null;
						previousValue.Productos.Remove(this);
					}
					this._Campana.Entity = value;
					if ((value != null))
					{
						value.Productos.Add(this);
						this._IdCampana = value.IdCampana;
					}
					else
					{
						this._IdCampana = default(int);
					}
					this.SendPropertyChanged("Campana");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProducto_Producto", Storage="_TipoProducto", ThisKey="IdTipoProducto", OtherKey="IdTipoProducto", IsForeignKey=true)]
		public TipoProducto TipoProducto
		{
			get
			{
				return this._TipoProducto.Entity;
			}
			set
			{
				TipoProducto previousValue = this._TipoProducto.Entity;
				if (((previousValue != value) 
							|| (this._TipoProducto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoProducto.Entity = null;
						previousValue.Productos.Remove(this);
					}
					this._TipoProducto.Entity = value;
					if ((value != null))
					{
						value.Productos.Add(this);
						this._IdTipoProducto = value.IdTipoProducto;
					}
					else
					{
						this._IdTipoProducto = default(int);
					}
					this.SendPropertyChanged("TipoProducto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Calendarios(Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Calendarios(Calendario entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_Piezas(Pieza entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Piezas(Pieza entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_ProductoEstadoHistoricos(ProductoEstadoHistorico entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_ProductoEstadoHistoricos(ProductoEstadoHistorico entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductoEstadoHistorico")]
	public partial class ProductoEstadoHistorico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProductoEstadoHistorico;
		
		private int _IdProducto;
		
		private int _IdTipoEstadoProducto;
		
		private System.DateTime _FechaCreacion;
		
		private string _CreadoPor;
		
		private EntityRef<Producto> _Producto;
		
		private EntityRef<TipoEstadoProducto> _TipoEstadoProducto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductoEstadoHistoricoChanging(int value);
    partial void OnIdProductoEstadoHistoricoChanged();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnIdTipoEstadoProductoChanging(int value);
    partial void OnIdTipoEstadoProductoChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    partial void OnCreadoPorChanging(string value);
    partial void OnCreadoPorChanged();
    #endregion
		
		public ProductoEstadoHistorico()
		{
			this._Producto = default(EntityRef<Producto>);
			this._TipoEstadoProducto = default(EntityRef<TipoEstadoProducto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductoEstadoHistorico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProductoEstadoHistorico
		{
			get
			{
				return this._IdProductoEstadoHistorico;
			}
			set
			{
				if ((this._IdProductoEstadoHistorico != value))
				{
					this.OnIdProductoEstadoHistoricoChanging(value);
					this.SendPropertyChanging();
					this._IdProductoEstadoHistorico = value;
					this.SendPropertyChanged("IdProductoEstadoHistorico");
					this.OnIdProductoEstadoHistoricoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", DbType="Int NOT NULL")]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoEstadoProducto", DbType="Int NOT NULL")]
		public int IdTipoEstadoProducto
		{
			get
			{
				return this._IdTipoEstadoProducto;
			}
			set
			{
				if ((this._IdTipoEstadoProducto != value))
				{
					if (this._TipoEstadoProducto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoEstadoProductoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoEstadoProducto = value;
					this.SendPropertyChanged("IdTipoEstadoProducto");
					this.OnIdTipoEstadoProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="Date NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreadoPor", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CreadoPor
		{
			get
			{
				return this._CreadoPor;
			}
			set
			{
				if ((this._CreadoPor != value))
				{
					this.OnCreadoPorChanging(value);
					this.SendPropertyChanging();
					this._CreadoPor = value;
					this.SendPropertyChanged("CreadoPor");
					this.OnCreadoPorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_ProductoEstadoHistorico", Storage="_Producto", ThisKey="IdProducto", OtherKey="IdProducto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.ProductoEstadoHistoricos.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.ProductoEstadoHistoricos.Add(this);
						this._IdProducto = value.IdProducto;
					}
					else
					{
						this._IdProducto = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEstadoProducto_ProductoEstadoHistorico", Storage="_TipoEstadoProducto", ThisKey="IdTipoEstadoProducto", OtherKey="IdTipoEstadoProdcuto", IsForeignKey=true)]
		public TipoEstadoProducto TipoEstadoProducto
		{
			get
			{
				return this._TipoEstadoProducto.Entity;
			}
			set
			{
				TipoEstadoProducto previousValue = this._TipoEstadoProducto.Entity;
				if (((previousValue != value) 
							|| (this._TipoEstadoProducto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoEstadoProducto.Entity = null;
						previousValue.ProductoEstadoHistoricos.Remove(this);
					}
					this._TipoEstadoProducto.Entity = value;
					if ((value != null))
					{
						value.ProductoEstadoHistoricos.Add(this);
						this._IdTipoEstadoProducto = value.IdTipoEstadoProdcuto;
					}
					else
					{
						this._IdTipoEstadoProducto = default(int);
					}
					this.SendPropertyChanged("TipoEstadoProducto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Servicio")]
	public partial class Servicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdServicio;
		
		private int _IdTipoServicio;
		
		private string _Nombre;
		
		private EntitySet<ClienteServicio> _ClienteServicios;
		
		private EntityRef<TipoServicio> _TipoServicio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdServicioChanging(int value);
    partial void OnIdServicioChanged();
    partial void OnIdTipoServicioChanging(int value);
    partial void OnIdTipoServicioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Servicio()
		{
			this._ClienteServicios = new EntitySet<ClienteServicio>(new Action<ClienteServicio>(this.attach_ClienteServicios), new Action<ClienteServicio>(this.detach_ClienteServicios));
			this._TipoServicio = default(EntityRef<TipoServicio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdServicio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdServicio
		{
			get
			{
				return this._IdServicio;
			}
			set
			{
				if ((this._IdServicio != value))
				{
					this.OnIdServicioChanging(value);
					this.SendPropertyChanging();
					this._IdServicio = value;
					this.SendPropertyChanged("IdServicio");
					this.OnIdServicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoServicio", DbType="Int NOT NULL")]
		public int IdTipoServicio
		{
			get
			{
				return this._IdTipoServicio;
			}
			set
			{
				if ((this._IdTipoServicio != value))
				{
					if (this._TipoServicio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoServicioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoServicio = value;
					this.SendPropertyChanged("IdTipoServicio");
					this.OnIdTipoServicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicio_ClienteServicio", Storage="_ClienteServicios", ThisKey="IdServicio", OtherKey="IdServicio")]
		public EntitySet<ClienteServicio> ClienteServicios
		{
			get
			{
				return this._ClienteServicios;
			}
			set
			{
				this._ClienteServicios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoServicio_Servicio", Storage="_TipoServicio", ThisKey="IdTipoServicio", OtherKey="IdTipoServicio", IsForeignKey=true)]
		public TipoServicio TipoServicio
		{
			get
			{
				return this._TipoServicio.Entity;
			}
			set
			{
				TipoServicio previousValue = this._TipoServicio.Entity;
				if (((previousValue != value) 
							|| (this._TipoServicio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoServicio.Entity = null;
						previousValue.Servicios.Remove(this);
					}
					this._TipoServicio.Entity = value;
					if ((value != null))
					{
						value.Servicios.Add(this);
						this._IdTipoServicio = value.IdTipoServicio;
					}
					else
					{
						this._IdTipoServicio = default(int);
					}
					this.SendPropertyChanged("TipoServicio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClienteServicios(ClienteServicio entity)
		{
			this.SendPropertyChanging();
			entity.Servicio = this;
		}
		
		private void detach_ClienteServicios(ClienteServicio entity)
		{
			this.SendPropertyChanging();
			entity.Servicio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoAtributo")]
	public partial class TipoAtributo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoAtributo;
		
		private System.Nullable<int> _IdTipoAtributoPadre;
		
		private string _Nombre;
		
		private EntitySet<Atributo> _Atributos;
		
		private EntitySet<TipoAtributo> _TipoAtributos;
		
		private EntityRef<TipoAtributo> _TipoAtributo1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoAtributoChanging(int value);
    partial void OnIdTipoAtributoChanged();
    partial void OnIdTipoAtributoPadreChanging(System.Nullable<int> value);
    partial void OnIdTipoAtributoPadreChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoAtributo()
		{
			this._Atributos = new EntitySet<Atributo>(new Action<Atributo>(this.attach_Atributos), new Action<Atributo>(this.detach_Atributos));
			this._TipoAtributos = new EntitySet<TipoAtributo>(new Action<TipoAtributo>(this.attach_TipoAtributos), new Action<TipoAtributo>(this.detach_TipoAtributos));
			this._TipoAtributo1 = default(EntityRef<TipoAtributo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoAtributo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoAtributo
		{
			get
			{
				return this._IdTipoAtributo;
			}
			set
			{
				if ((this._IdTipoAtributo != value))
				{
					this.OnIdTipoAtributoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoAtributo = value;
					this.SendPropertyChanged("IdTipoAtributo");
					this.OnIdTipoAtributoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoAtributoPadre", DbType="Int")]
		public System.Nullable<int> IdTipoAtributoPadre
		{
			get
			{
				return this._IdTipoAtributoPadre;
			}
			set
			{
				if ((this._IdTipoAtributoPadre != value))
				{
					if (this._TipoAtributo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoAtributoPadreChanging(value);
					this.SendPropertyChanging();
					this._IdTipoAtributoPadre = value;
					this.SendPropertyChanged("IdTipoAtributoPadre");
					this.OnIdTipoAtributoPadreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAtributo_Atributo", Storage="_Atributos", ThisKey="IdTipoAtributo", OtherKey="IdTipoAtributo")]
		public EntitySet<Atributo> Atributos
		{
			get
			{
				return this._Atributos;
			}
			set
			{
				this._Atributos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAtributo_TipoAtributo", Storage="_TipoAtributos", ThisKey="IdTipoAtributo", OtherKey="IdTipoAtributoPadre")]
		public EntitySet<TipoAtributo> TipoAtributos
		{
			get
			{
				return this._TipoAtributos;
			}
			set
			{
				this._TipoAtributos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAtributo_TipoAtributo", Storage="_TipoAtributo1", ThisKey="IdTipoAtributoPadre", OtherKey="IdTipoAtributo", IsForeignKey=true)]
		public TipoAtributo TipoAtributo1
		{
			get
			{
				return this._TipoAtributo1.Entity;
			}
			set
			{
				TipoAtributo previousValue = this._TipoAtributo1.Entity;
				if (((previousValue != value) 
							|| (this._TipoAtributo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAtributo1.Entity = null;
						previousValue.TipoAtributos.Remove(this);
					}
					this._TipoAtributo1.Entity = value;
					if ((value != null))
					{
						value.TipoAtributos.Add(this);
						this._IdTipoAtributoPadre = value.IdTipoAtributo;
					}
					else
					{
						this._IdTipoAtributoPadre = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipoAtributo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Atributos(Atributo entity)
		{
			this.SendPropertyChanging();
			entity.TipoAtributo = this;
		}
		
		private void detach_Atributos(Atributo entity)
		{
			this.SendPropertyChanging();
			entity.TipoAtributo = null;
		}
		
		private void attach_TipoAtributos(TipoAtributo entity)
		{
			this.SendPropertyChanging();
			entity.TipoAtributo1 = this;
		}
		
		private void detach_TipoAtributos(TipoAtributo entity)
		{
			this.SendPropertyChanging();
			entity.TipoAtributo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoCanal")]
	public partial class TipoCanal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoCanal;
		
		private string _Nombre;
		
		private EntitySet<Canal> _Canals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoCanalChanging(int value);
    partial void OnIdTipoCanalChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoCanal()
		{
			this._Canals = new EntitySet<Canal>(new Action<Canal>(this.attach_Canals), new Action<Canal>(this.detach_Canals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoCanal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoCanal
		{
			get
			{
				return this._IdTipoCanal;
			}
			set
			{
				if ((this._IdTipoCanal != value))
				{
					this.OnIdTipoCanalChanging(value);
					this.SendPropertyChanging();
					this._IdTipoCanal = value;
					this.SendPropertyChanged("IdTipoCanal");
					this.OnIdTipoCanalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoCanal_Canal", Storage="_Canals", ThisKey="IdTipoCanal", OtherKey="IdTipoCanal")]
		public EntitySet<Canal> Canals
		{
			get
			{
				return this._Canals;
			}
			set
			{
				this._Canals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Canals(Canal entity)
		{
			this.SendPropertyChanging();
			entity.TipoCanal = this;
		}
		
		private void detach_Canals(Canal entity)
		{
			this.SendPropertyChanging();
			entity.TipoCanal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoDiaEspecial")]
	public partial class TipoDiaEspecial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoDiaEspecial;
		
		private string _Nombre;
		
		private EntitySet<DiaEspecial> _DiaEspecials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoDiaEspecialChanging(int value);
    partial void OnIdTipoDiaEspecialChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoDiaEspecial()
		{
			this._DiaEspecials = new EntitySet<DiaEspecial>(new Action<DiaEspecial>(this.attach_DiaEspecials), new Action<DiaEspecial>(this.detach_DiaEspecials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoDiaEspecial", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoDiaEspecial
		{
			get
			{
				return this._IdTipoDiaEspecial;
			}
			set
			{
				if ((this._IdTipoDiaEspecial != value))
				{
					this.OnIdTipoDiaEspecialChanging(value);
					this.SendPropertyChanging();
					this._IdTipoDiaEspecial = value;
					this.SendPropertyChanged("IdTipoDiaEspecial");
					this.OnIdTipoDiaEspecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDiaEspecial_DiaEspecial", Storage="_DiaEspecials", ThisKey="IdTipoDiaEspecial", OtherKey="IdTipoDiaEspecial")]
		public EntitySet<DiaEspecial> DiaEspecials
		{
			get
			{
				return this._DiaEspecials;
			}
			set
			{
				this._DiaEspecials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiaEspecials(DiaEspecial entity)
		{
			this.SendPropertyChanging();
			entity.TipoDiaEspecial = this;
		}
		
		private void detach_DiaEspecials(DiaEspecial entity)
		{
			this.SendPropertyChanging();
			entity.TipoDiaEspecial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoEstadoNotificacion")]
	public partial class TipoEstadoNotificacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoEstadoNotificacion;
		
		private string _Nombre;
		
		private EntitySet<Notificacion> _Notificacions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoEstadoNotificacionChanging(int value);
    partial void OnIdTipoEstadoNotificacionChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoEstadoNotificacion()
		{
			this._Notificacions = new EntitySet<Notificacion>(new Action<Notificacion>(this.attach_Notificacions), new Action<Notificacion>(this.detach_Notificacions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoEstadoNotificacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoEstadoNotificacion
		{
			get
			{
				return this._IdTipoEstadoNotificacion;
			}
			set
			{
				if ((this._IdTipoEstadoNotificacion != value))
				{
					this.OnIdTipoEstadoNotificacionChanging(value);
					this.SendPropertyChanging();
					this._IdTipoEstadoNotificacion = value;
					this.SendPropertyChanged("IdTipoEstadoNotificacion");
					this.OnIdTipoEstadoNotificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEstadoNotificacion_Notificacion", Storage="_Notificacions", ThisKey="IdTipoEstadoNotificacion", OtherKey="IdTipoEstadoNotificacion")]
		public EntitySet<Notificacion> Notificacions
		{
			get
			{
				return this._Notificacions;
			}
			set
			{
				this._Notificacions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notificacions(Notificacion entity)
		{
			this.SendPropertyChanging();
			entity.TipoEstadoNotificacion = this;
		}
		
		private void detach_Notificacions(Notificacion entity)
		{
			this.SendPropertyChanging();
			entity.TipoEstadoNotificacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoEstadoProducto")]
	public partial class TipoEstadoProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoEstadoProdcuto;
		
		private string _Nombre;
		
		private EntitySet<EstadoProducto> _EstadoProductos;
		
		private EntitySet<ProductoEstadoHistorico> _ProductoEstadoHistoricos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoEstadoProdcutoChanging(int value);
    partial void OnIdTipoEstadoProdcutoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoEstadoProducto()
		{
			this._EstadoProductos = new EntitySet<EstadoProducto>(new Action<EstadoProducto>(this.attach_EstadoProductos), new Action<EstadoProducto>(this.detach_EstadoProductos));
			this._ProductoEstadoHistoricos = new EntitySet<ProductoEstadoHistorico>(new Action<ProductoEstadoHistorico>(this.attach_ProductoEstadoHistoricos), new Action<ProductoEstadoHistorico>(this.detach_ProductoEstadoHistoricos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoEstadoProdcuto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoEstadoProdcuto
		{
			get
			{
				return this._IdTipoEstadoProdcuto;
			}
			set
			{
				if ((this._IdTipoEstadoProdcuto != value))
				{
					this.OnIdTipoEstadoProdcutoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoEstadoProdcuto = value;
					this.SendPropertyChanged("IdTipoEstadoProdcuto");
					this.OnIdTipoEstadoProdcutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEstadoProducto_EstadoProducto", Storage="_EstadoProductos", ThisKey="IdTipoEstadoProdcuto", OtherKey="IdTipoEstadoProducto")]
		public EntitySet<EstadoProducto> EstadoProductos
		{
			get
			{
				return this._EstadoProductos;
			}
			set
			{
				this._EstadoProductos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoEstadoProducto_ProductoEstadoHistorico", Storage="_ProductoEstadoHistoricos", ThisKey="IdTipoEstadoProdcuto", OtherKey="IdTipoEstadoProducto")]
		public EntitySet<ProductoEstadoHistorico> ProductoEstadoHistoricos
		{
			get
			{
				return this._ProductoEstadoHistoricos;
			}
			set
			{
				this._ProductoEstadoHistoricos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EstadoProductos(EstadoProducto entity)
		{
			this.SendPropertyChanging();
			entity.TipoEstadoProducto = this;
		}
		
		private void detach_EstadoProductos(EstadoProducto entity)
		{
			this.SendPropertyChanging();
			entity.TipoEstadoProducto = null;
		}
		
		private void attach_ProductoEstadoHistoricos(ProductoEstadoHistorico entity)
		{
			this.SendPropertyChanging();
			entity.TipoEstadoProducto = this;
		}
		
		private void detach_ProductoEstadoHistoricos(ProductoEstadoHistorico entity)
		{
			this.SendPropertyChanging();
			entity.TipoEstadoProducto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoNotificacion")]
	public partial class TipoNotificacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoNotificacion;
		
		private string _Nombre;
		
		private EntitySet<Notificacion> _Notificacions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoNotificacionChanging(int value);
    partial void OnIdTipoNotificacionChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoNotificacion()
		{
			this._Notificacions = new EntitySet<Notificacion>(new Action<Notificacion>(this.attach_Notificacions), new Action<Notificacion>(this.detach_Notificacions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoNotificacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoNotificacion
		{
			get
			{
				return this._IdTipoNotificacion;
			}
			set
			{
				if ((this._IdTipoNotificacion != value))
				{
					this.OnIdTipoNotificacionChanging(value);
					this.SendPropertyChanging();
					this._IdTipoNotificacion = value;
					this.SendPropertyChanged("IdTipoNotificacion");
					this.OnIdTipoNotificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoNotificacion_Notificacion", Storage="_Notificacions", ThisKey="IdTipoNotificacion", OtherKey="IdTipoNotificacion")]
		public EntitySet<Notificacion> Notificacions
		{
			get
			{
				return this._Notificacions;
			}
			set
			{
				this._Notificacions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notificacions(Notificacion entity)
		{
			this.SendPropertyChanging();
			entity.TipoNotificacion = this;
		}
		
		private void detach_Notificacions(Notificacion entity)
		{
			this.SendPropertyChanging();
			entity.TipoNotificacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoProducto")]
	public partial class TipoProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoProducto;
		
		private System.Nullable<int> _IdTipoProductoPadre;
		
		private string _Nombre;
		
		private EntitySet<Producto> _Productos;
		
		private EntitySet<TipoProducto> _TipoProductos;
		
		private EntityRef<TipoProducto> _TipoProducto1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoProductoChanging(int value);
    partial void OnIdTipoProductoChanged();
    partial void OnIdTipoProductoPadreChanging(System.Nullable<int> value);
    partial void OnIdTipoProductoPadreChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoProducto()
		{
			this._Productos = new EntitySet<Producto>(new Action<Producto>(this.attach_Productos), new Action<Producto>(this.detach_Productos));
			this._TipoProductos = new EntitySet<TipoProducto>(new Action<TipoProducto>(this.attach_TipoProductos), new Action<TipoProducto>(this.detach_TipoProductos));
			this._TipoProducto1 = default(EntityRef<TipoProducto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoProducto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoProducto
		{
			get
			{
				return this._IdTipoProducto;
			}
			set
			{
				if ((this._IdTipoProducto != value))
				{
					this.OnIdTipoProductoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoProducto = value;
					this.SendPropertyChanged("IdTipoProducto");
					this.OnIdTipoProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoProductoPadre", DbType="Int")]
		public System.Nullable<int> IdTipoProductoPadre
		{
			get
			{
				return this._IdTipoProductoPadre;
			}
			set
			{
				if ((this._IdTipoProductoPadre != value))
				{
					if (this._TipoProducto1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoProductoPadreChanging(value);
					this.SendPropertyChanging();
					this._IdTipoProductoPadre = value;
					this.SendPropertyChanged("IdTipoProductoPadre");
					this.OnIdTipoProductoPadreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProducto_Producto", Storage="_Productos", ThisKey="IdTipoProducto", OtherKey="IdTipoProducto")]
		public EntitySet<Producto> Productos
		{
			get
			{
				return this._Productos;
			}
			set
			{
				this._Productos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProducto_TipoProducto", Storage="_TipoProductos", ThisKey="IdTipoProducto", OtherKey="IdTipoProductoPadre")]
		public EntitySet<TipoProducto> TipoProductos
		{
			get
			{
				return this._TipoProductos;
			}
			set
			{
				this._TipoProductos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProducto_TipoProducto", Storage="_TipoProducto1", ThisKey="IdTipoProductoPadre", OtherKey="IdTipoProducto", IsForeignKey=true)]
		public TipoProducto TipoProducto1
		{
			get
			{
				return this._TipoProducto1.Entity;
			}
			set
			{
				TipoProducto previousValue = this._TipoProducto1.Entity;
				if (((previousValue != value) 
							|| (this._TipoProducto1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoProducto1.Entity = null;
						previousValue.TipoProductos.Remove(this);
					}
					this._TipoProducto1.Entity = value;
					if ((value != null))
					{
						value.TipoProductos.Add(this);
						this._IdTipoProductoPadre = value.IdTipoProducto;
					}
					else
					{
						this._IdTipoProductoPadre = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipoProducto1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Productos(Producto entity)
		{
			this.SendPropertyChanging();
			entity.TipoProducto = this;
		}
		
		private void detach_Productos(Producto entity)
		{
			this.SendPropertyChanging();
			entity.TipoProducto = null;
		}
		
		private void attach_TipoProductos(TipoProducto entity)
		{
			this.SendPropertyChanging();
			entity.TipoProducto1 = this;
		}
		
		private void detach_TipoProductos(TipoProducto entity)
		{
			this.SendPropertyChanging();
			entity.TipoProducto1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoServicio")]
	public partial class TipoServicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoServicio;
		
		private int _IdTipoServicioPadre;
		
		private string _Nombre;
		
		private EntitySet<Servicio> _Servicios;
		
		private EntitySet<TipoServicio> _TipoServicios;
		
		private EntityRef<TipoServicio> _TipoServicio1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoServicioChanging(int value);
    partial void OnIdTipoServicioChanged();
    partial void OnIdTipoServicioPadreChanging(int value);
    partial void OnIdTipoServicioPadreChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoServicio()
		{
			this._Servicios = new EntitySet<Servicio>(new Action<Servicio>(this.attach_Servicios), new Action<Servicio>(this.detach_Servicios));
			this._TipoServicios = new EntitySet<TipoServicio>(new Action<TipoServicio>(this.attach_TipoServicios), new Action<TipoServicio>(this.detach_TipoServicios));
			this._TipoServicio1 = default(EntityRef<TipoServicio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoServicio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoServicio
		{
			get
			{
				return this._IdTipoServicio;
			}
			set
			{
				if ((this._IdTipoServicio != value))
				{
					this.OnIdTipoServicioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoServicio = value;
					this.SendPropertyChanged("IdTipoServicio");
					this.OnIdTipoServicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoServicioPadre", DbType="Int NOT NULL")]
		public int IdTipoServicioPadre
		{
			get
			{
				return this._IdTipoServicioPadre;
			}
			set
			{
				if ((this._IdTipoServicioPadre != value))
				{
					if (this._TipoServicio1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoServicioPadreChanging(value);
					this.SendPropertyChanging();
					this._IdTipoServicioPadre = value;
					this.SendPropertyChanged("IdTipoServicioPadre");
					this.OnIdTipoServicioPadreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoServicio_Servicio", Storage="_Servicios", ThisKey="IdTipoServicio", OtherKey="IdTipoServicio")]
		public EntitySet<Servicio> Servicios
		{
			get
			{
				return this._Servicios;
			}
			set
			{
				this._Servicios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoServicio_TipoServicio", Storage="_TipoServicios", ThisKey="IdTipoServicio", OtherKey="IdTipoServicioPadre")]
		public EntitySet<TipoServicio> TipoServicios
		{
			get
			{
				return this._TipoServicios;
			}
			set
			{
				this._TipoServicios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoServicio_TipoServicio", Storage="_TipoServicio1", ThisKey="IdTipoServicioPadre", OtherKey="IdTipoServicio", IsForeignKey=true)]
		public TipoServicio TipoServicio1
		{
			get
			{
				return this._TipoServicio1.Entity;
			}
			set
			{
				TipoServicio previousValue = this._TipoServicio1.Entity;
				if (((previousValue != value) 
							|| (this._TipoServicio1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoServicio1.Entity = null;
						previousValue.TipoServicios.Remove(this);
					}
					this._TipoServicio1.Entity = value;
					if ((value != null))
					{
						value.TipoServicios.Add(this);
						this._IdTipoServicioPadre = value.IdTipoServicio;
					}
					else
					{
						this._IdTipoServicioPadre = default(int);
					}
					this.SendPropertyChanged("TipoServicio1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Servicios(Servicio entity)
		{
			this.SendPropertyChanging();
			entity.TipoServicio = this;
		}
		
		private void detach_Servicios(Servicio entity)
		{
			this.SendPropertyChanging();
			entity.TipoServicio = null;
		}
		
		private void attach_TipoServicios(TipoServicio entity)
		{
			this.SendPropertyChanging();
			entity.TipoServicio1 = this;
		}
		
		private void detach_TipoServicios(TipoServicio entity)
		{
			this.SendPropertyChanging();
			entity.TipoServicio1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoUsuario")]
	public partial class TipoUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoUsuario;
		
		private string _Nombre;
		
		private EntitySet<Usuario> _Usuarios;
		
		private EntitySet<TipoUsuarioPermiso> _TipoUsuarioPermisos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoUsuarioChanging(int value);
    partial void OnIdTipoUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoUsuario()
		{
			this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
			this._TipoUsuarioPermisos = new EntitySet<TipoUsuarioPermiso>(new Action<TipoUsuarioPermiso>(this.attach_TipoUsuarioPermisos), new Action<TipoUsuarioPermiso>(this.detach_TipoUsuarioPermisos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Usuario", Storage="_Usuarios", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario")]
		public EntitySet<Usuario> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_TipoUsuarioPermiso", Storage="_TipoUsuarioPermisos", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario")]
		public EntitySet<TipoUsuarioPermiso> TipoUsuarioPermisos
		{
			get
			{
				return this._TipoUsuarioPermisos;
			}
			set
			{
				this._TipoUsuarioPermisos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = this;
		}
		
		private void detach_Usuarios(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = null;
		}
		
		private void attach_TipoUsuarioPermisos(TipoUsuarioPermiso entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = this;
		}
		
		private void detach_TipoUsuarioPermisos(TipoUsuarioPermiso entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoUsuarioPermiso")]
	public partial class TipoUsuarioPermiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoUsuarioPermiso;
		
		private int _IdTipoUsuario;
		
		private int _IdPermiso;
		
		private EntityRef<Permiso> _Permiso;
		
		private EntityRef<TipoUsuario> _TipoUsuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoUsuarioPermisoChanging(int value);
    partial void OnIdTipoUsuarioPermisoChanged();
    partial void OnIdTipoUsuarioChanging(int value);
    partial void OnIdTipoUsuarioChanged();
    partial void OnIdPermisoChanging(int value);
    partial void OnIdPermisoChanged();
    #endregion
		
		public TipoUsuarioPermiso()
		{
			this._Permiso = default(EntityRef<Permiso>);
			this._TipoUsuario = default(EntityRef<TipoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuarioPermiso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoUsuarioPermiso
		{
			get
			{
				return this._IdTipoUsuarioPermiso;
			}
			set
			{
				if ((this._IdTipoUsuarioPermiso != value))
				{
					this.OnIdTipoUsuarioPermisoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuarioPermiso = value;
					this.SendPropertyChanged("IdTipoUsuarioPermiso");
					this.OnIdTipoUsuarioPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", DbType="Int NOT NULL")]
		public int IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					if (this._TipoUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPermiso", DbType="Int NOT NULL")]
		public int IdPermiso
		{
			get
			{
				return this._IdPermiso;
			}
			set
			{
				if ((this._IdPermiso != value))
				{
					if (this._Permiso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPermisoChanging(value);
					this.SendPropertyChanging();
					this._IdPermiso = value;
					this.SendPropertyChanged("IdPermiso");
					this.OnIdPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permiso_TipoUsuarioPermiso", Storage="_Permiso", ThisKey="IdPermiso", OtherKey="IdPermiso", IsForeignKey=true)]
		public Permiso Permiso
		{
			get
			{
				return this._Permiso.Entity;
			}
			set
			{
				Permiso previousValue = this._Permiso.Entity;
				if (((previousValue != value) 
							|| (this._Permiso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permiso.Entity = null;
						previousValue.TipoUsuarioPermisos.Remove(this);
					}
					this._Permiso.Entity = value;
					if ((value != null))
					{
						value.TipoUsuarioPermisos.Add(this);
						this._IdPermiso = value.IdPermiso;
					}
					else
					{
						this._IdPermiso = default(int);
					}
					this.SendPropertyChanged("Permiso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_TipoUsuarioPermiso", Storage="_TipoUsuario", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario", IsForeignKey=true)]
		public TipoUsuario TipoUsuario
		{
			get
			{
				return this._TipoUsuario.Entity;
			}
			set
			{
				TipoUsuario previousValue = this._TipoUsuario.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuario.Entity = null;
						previousValue.TipoUsuarioPermisos.Remove(this);
					}
					this._TipoUsuario.Entity = value;
					if ((value != null))
					{
						value.TipoUsuarioPermisos.Add(this);
						this._IdTipoUsuario = value.IdTipoUsuario;
					}
					else
					{
						this._IdTipoUsuario = default(int);
					}
					this.SendPropertyChanged("TipoUsuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
